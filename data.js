var total_depth,total_pixel,calc,myImage,Scale,coordX=[],coordY=[],Xaxis=[],Yaxis=[],maxdepth2=[],pipelevel=[],groundlevel=[],data=[],pipecoord=[],groundcoord=[],lenx=[],leny=[],save_length=[],save_values=[],undoDepth=[],arr_valueFirst=[],arr_valueSecond=[],valueFirst=0,valueSecond=0,pipelength=0,mark1=0,mark2=0,shortcut=0;const undobtn=document.querySelector("#undo"),lengthbtn=document.querySelector("#length"),depthbtn=document.querySelector("#checkX"),pointbtn=document.querySelector("#Points"),canvasElem=document.getElementById("myCanvas"),ctx=canvasElem.getContext("2d");function Load_Image(){let e=document.getElementById("imageInput");e.addEventListener("change",function(e){var t;e.target.files&&(0==(Scale=Number(prompt("Add a scale to the image","1")))&&(scale=1),t=e.target.files[0],(e=new FileReader).readAsDataURL(t),e.onloadend=function(e){(myImage=new Image).src=e.target.result,myImage.onload=function(){var e=document.getElementById("myCanvas"),t=e.getContext("2d");e.width=myImage.width*Scale,e.height=myImage.height*Scale,t.drawImage(myImage,0,0,myImage.width*Scale,myImage.height*Scale)}})})}function printMousePos(e,t){var o=e.getBoundingClientRect(),e=t.clientX-o.left,o=t.clientY-o.top;console.log("Coordinate x: "+e,"Coordinate y: "+o),coordX.push(e),coordY.push(o),lenx.push(e),leny.push(o)}function drawcircle(e,t,o){var n=document.getElementById("myCanvas").getContext("2d");n.beginPath(),n.arc(t,o,4,0,2*Math.PI*2,!1),n.fillStyle=e,n.fill(),n.stroke()}function drawline(e,t,o,n){var a=document.getElementById("myCanvas");a.getContext&&((a=a.getContext("2d")).beginPath(),a.lineCap="round",a.moveTo(e,t),a.lineTo(o,n),a.stroke())}function level(e){total_depth=maxdepth2[0][0]-maxdepth2[1][0],total_pixel=maxdepth2[1][2]-maxdepth2[0][2],calc=total_pixel/total_depth;e-=maxdepth2[0][2];return maxdepth2[0][0]-e/calc}function depth_undo(){if(0==pipecoord.length&&0==groundcoord.length)pointbtn.checked=!1,lengthbtn.checked=!1,maxdepth2.pop(),1==maxdepth2.length&&drawcircle("black",maxdepth2[0][1],maxdepth2[0][2]);else{drawline(maxdepth2[0][1],maxdepth2[0][2],maxdepth2[1][1],maxdepth2[1][2]);for(var e=0;e<total_depth+1;e++)drawcircle("black",maxdepth2[0][1],maxdepth2[0][2]+calc*e)}}function point_undo(){if(mark2<mark1)pipelevel=[],pipecoord.pop(),--mark1;else if(mark1==mark2&&0<pipecoord.length){groundcoord.pop(),--mark2,data.pop();const o=document.getElementById("myTableBody");for(table_data=data;o.firstChild;)o.removeChild(o.firstChild);if(0<data.length)for(let t=0;t<table_data.length;t++){const n=o.insertRow(),a=n.insertCell(0);a.innerHTML=t+1;for(let e=0;e<table_data[t].length;e++){const l=n.insertCell(e+1);num=Math.round(100*table_data[t][e])/100,l.innerHTML=num.toFixed(2)}}}for(var e=0;e<groundcoord.length;e++)drawcircle("blue",groundcoord[e][0],groundcoord[e][1]),e!=groundcoord.length-1&&drawline(groundcoord[e+1][0],groundcoord[e+1][1],groundcoord[e][0],groundcoord[e][1]);for(e=0;e<pipecoord.length;e++)drawcircle("yellow",pipecoord[e][0],pipecoord[e][1]),e!=pipecoord.length-1&&drawline(pipecoord[e+1][0],pipecoord[e+1][1],pipecoord[e][0],pipecoord[e][1]),drawline(pipecoord[e][0],0,pipecoord[e][0],2e3);0<save_values.length&&0<pipecoord.length&&pipecoord[pipecoord.length-1][0]>save_length[save_length.length-1][0]&&pipecoord[pipecoord.length-1][0]<save_length[save_length.length-1][1]&&(mark1!=mark2&&drawcircle("green",pipecoord[pipecoord.length-1][0],pipecoord[pipecoord.length-1][1]),shortcut=1)}function calc_length(e,t,o,n){return n-(n-o)/(t-e)*(t-pipecoord[mark1-1][0])}function drawLine(e){ctx.beginPath(),ctx.moveTo(e,0),ctx.lineTo(e,canvasElem.height),ctx.stroke()}depthbtn.addEventListener("change",function(){1==pointbtn.checked||1==lengthbtn.checked||2==maxdepth2.length?depthbtn.checked=!0:maxdepth2.length<1&&alert("Click at the maximum depth point on the graph.")}),pointbtn.addEventListener("change",function(){1==pointbtn.checked&&(lengthbtn.checked=!1,2!=maxdepth2.length&&(alert("Find the depth point first"),pointbtn.checked=!1))}),lengthbtn.addEventListener("change",function(){1==lengthbtn.checked&&(2!=maxdepth2.length?(alert("Find the depth point first"),lengthbtn.checked=!1):pointbtn.checked=!1)}),undobtn.addEventListener("click",function(){var e=document.getElementById("myCanvas"),t=e.getContext("2d");t.clearRect(0,0,e.width,e.height),null!=myImage&&t.drawImage(myImage,0,0,myImage.width*Scale,myImage.height*Scale),0==maxdepth2.length&&alert("There is nothing to undo"),depth_undo(),point_undo()}),canvasElem.addEventListener("mousedown",function(e){if(printMousePos(canvasElem,e),maxdepth2.length<2&&1==depthbtn.checked){var t=[];if(1==confirm("Confirm or deny"))if(lastx=coordX.length-1,lasty=coordY.length-1,0==maxdepth2.length){var o=prompt("Enter max depth value");t.push(Number(o),coordX[lastx],coordY[lasty]),maxdepth2.push(t),drawcircle("black",coordX[lastx],coordY[lasty]),firstX=lastx,alert("Click at the minimum depth point on the graph.")}else{o=prompt("Enter min depth value");t.push(Number(o),coordX[firstX],coordY[lasty]),maxdepth2.push(t),drawcircle("black",coordX[firstX],coordY[lasty]),total_depth=maxdepth2[0][0]-maxdepth2[1][0],total_pixel=maxdepth2[1][2]-maxdepth2[0][2],calc=total_pixel/total_depth;for(var n=1;n<total_depth;n++)drawcircle("black",maxdepth2[0][1],maxdepth2[0][2]+calc*n);drawline(maxdepth2[0][1],maxdepth2[0][2],maxdepth2[1][1],maxdepth2[1][2])}}if(1==pointbtn.checked)if(lastx=coordX.length-1,lasty=coordY.length-1,mark1==mark2)1==confirm("Confirm or deny")&&(mark1+=1,pipecoord.push([coordX[lastx],coordY[lasty]]),drawcircle("yellow",coordX[lastx],coordY[lasty]),1<pipecoord.length&&drawline(pipecoord[mark1-2][0],pipecoord[mark1-2][1],pipecoord[mark1-1][0],pipecoord[mark1-1][1]),drawline(pipecoord[mark1-1][0],0,pipecoord[mark1-1][0],2e3)),0<save_values.length&&pipecoord[pipecoord.length-1][0]>save_length[save_length.length-1][0]&&pipecoord[pipecoord.length-1][0]<save_length[save_length.length-1][1]&&mark1!=mark2&&(drawcircle("green",pipecoord[pipecoord.length-1][0],pipecoord[pipecoord.length-1][1]),len=save_values.length-1,pipelength=calc_length(save_length[len][0],save_length[len][1],save_values[len][0],save_values[len][1]),alert("pipe length value for current point is "+pipelength.toFixed(2)),shortcut=1);else if(1==confirm("Confirm or deny"))if(coordX[lastx]>pipecoord[mark1-1][0]+3||coordX[lastx]<pipecoord[mark1-1][0]-3)alert("Please pinpoint ground level first");else{mark2+=1,groundlevel=[],t=[],groundcoord.push([coordX[lastx],coordY[lasty]]),drawcircle("blue",coordX[lastx],coordY[lasty]),drawcircle("yellow",pipecoord[pipecoord.length-1][0],pipecoord[pipecoord.length-1][1]),groundlevel.push(level(coordY[lasty])),0==pipelength&&0==shortcut?pipelength=prompt("Insert pipe length value"):(len=save_values.length-1,pipelength=calc_length(save_length[len][0],save_length[len][1],save_values[len][0],save_values[len][1]),shortcut=0),pipelevel.push(level(pipecoord[mark1-1][1]));t=pipelevel.concat(groundlevel);data.push([t[0],t[1],Number(pipelength)]),1<groundcoord.length&&drawline(groundcoord[mark1-2][0],groundcoord[mark1-2][1],groundcoord[mark1-1][0],groundcoord[mark1-1][1]);const a=document.getElementById("myTableBody");for(table_data=data;a.firstChild;)a.removeChild(a.firstChild);for(let t=0;t<table_data.length;t++){const l=a.insertRow(),r=l.insertCell(0);r.innerHTML=t+1;for(let e=0;e<table_data[t].length;e++){const d=l.insertCell(e+1);num=Math.round(100*table_data[t][e])/100,d.innerHTML=num.toFixed(2)}}pipelength=0,pipelevel=[]}1==lengthbtn.checked&&(getcoord=coordX.length-1,0<coordY[getcoord]&&1==confirm("Confirm or deny")&&(0==arr_valueFirst.length?(arr_valueFirst.push(coordX[getcoord],coordY[getcoord]),valueFirst=Number(prompt("1st pipelength value"))):(arr_valueSecond.push(coordX[getcoord],arr_valueFirst[1]),valueSecond=Number(prompt("2nd pipelength value")),0<pipecoord.length&&(pipelength=calc_length(arr_valueFirst[0],arr_valueSecond[0],valueFirst,valueSecond)),save_length.push([arr_valueFirst[0],arr_valueSecond[0]]),save_values.push([valueFirst,valueSecond]),arr_valueFirst=[],arr_valueSecond=[],lengthbtn.checked=!1,pointbtn.checked=!0)))});let saveFile=()=>{for(var e=[],t=[],o=[],n=0;n<data.length;n++){t=[];for(var a=0;a<data[n].length;a++)num=Math.round(100*data[n][a])/100,0==a?t.push("\n"+num.toFixed(2)):1==a?t.push(num.toFixed(2)):n==data.length-1&&a==data[n].length-1?t.push(num.toFixed(2)+":,"):t.push(num.toFixed(2)+":");o.push(t)}for(n=0;n<data.length;n++)e=e.concat(o[n]);var l=(l=e.toString().replaceAll(",","\t")).toString().replaceAll(":\t",""),r=new Blob(["p_level\tg_level\tlength",l],{type:"text/plain"}),l=prompt("Insert file name?");let d=document.createElement("a");d.download=l,null!=window.webkitURL?d.href=window.webkitURL.createObjectURL(r):(d.href=window.URL.createObjectURL(r),d.style.display="none",document.body.appendChild(d)),d.click()};Load_Image();